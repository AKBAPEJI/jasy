#!/usr/bin/env python3

# Extend PYTHONPATH with 'lib'
import sys, os
sys.path.insert(0, os.path.normpath(os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])), os.pardir, "lib")))

# Import JavaScript tooling
from api import *
import time, logging

start = time.time()

# Application specific code
session = JsSession()
session.addProject(JsProject("/Users/Sebastian/Workspace/qooxdoo.unify/qooxdoo/framework"))
session.addProject(JsProject("/Users/Sebastian/Workspace/qooxdoo.unify/qooxdoo/component/apiviewer"))

# Locale data
session.addLocale("en_US")
#session.addLocale("de_DE")

# Variant data
session.addVariant("qx.debug", [ "on", "off" ])
#session.addVariant("qx.client", [ "webkit", "gecko", "mshtml" ])

for permutation in session.getPermutations():
    hashed = session.getPermutationHash(permutation)
    print("Permutation: %s (%s)" % (permutation, hashed))
    
    
    # Resolving dependencies
    resolver = JsResolver(session, permutation)
    #resolver.addClassName("qx.core.Object")
    #resolver.addClassName("qx.ui.window.Window")
    resolver.addClassName("apiviewer.Application")
    classes = resolver.getIncludedClasses()

    # Sorting classes
    sortedClasses = resolver.getSortedClasses()

    # Compiling classes
    compiler = JsCompiler(session, sortedClasses)
    compiler.compile("main-%s.js" % hashed)




# Info
logging.info("Runtime: %ims" % ((time.time()-start)*1000))

# Close session
session.close()