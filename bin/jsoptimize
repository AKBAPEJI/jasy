#!/usr/bin/env python3

import sys, os

# Extend PYTHONPATH with 'lib'
sys.path.insert(0, os.path.normpath(os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])), os.pardir, "lib")))

from js.parser.Parser import parse
from js.optimizer import CombineDeclarations
from js.optimizer import LocalVariables
from js.optimizer import ValuePatch
from js.optimizer import DeadCode
from js.Compressor import compress


def jsoptimize(source, filename=None):
    variantData = {
        "js.Variant.VERSION" : 0.3,
        "js.Variant.DEBUG" : "true",
        "js.Variant.LOCAL_STORAGE" : "true",
        "js.Variant.NATIVE_JSON" : "true",
        "js.Variant.THEME" : '"blueish"',
        "js.Variant.LOCALE" : '"de_DE"',
        
        "qx.debug" : "on"
    }
    
    tree = parse(source, filename)
    print(tree)
    ValuePatch.patch(tree, variantData)
    print(tree)    
    DeadCode.optimize(tree)
    CombineDeclarations.optimize(tree)
    LocalVariables.optimize(tree)
    return compress(tree)


if __name__ == "__main__":
    print(jsoptimize(open(sys.argv[1], encoding="utf-8").read(), sys.argv[1]))
